A) Hamming code
import java.util.Scanner;
public class Hammingc
{
 public static void main(String args[])
 {
 Scanner sc = new Scanner(System.in);
 System.out.print("Enter number of data bits: ");
 int m = sc.nextInt();
 int r = 0;
 while (Math.pow(2, r) < (m + r + 1)) {
 r++;
 }
 int totalbits = m + r;
 int[] hammingcode = new int[totalbits+1];
 System.out.print("Enter " + m + " data bits: ");
 int j = 0;
 for (int i = 1; i <= totalbits; i++) {
 if ((i & (i - 1)) == 0) {
 hammingcode[i] = 0;
 } else {
 hammingcode[i] = sc.nextInt();
 }
 }
 for (int i = 1; i <= totalbits; i *= 2) {
 int parity = 0;
 for (int k = i; k <= totalbits; k += 2 * i)
 {
 for (int p = k; p < k + i && p <= totalbits; p++)
 {
 if (p != i)
 {
 parity ^= hammingcode[p];
 }
 }
 }
 hammingcode[i] = parity;
 }
 System.out.print("Generated Hamming code: ");
 for (int i = 1; i <= totalbits; i++) {
 System.out.print(hammingcode[i] + " ");
 }
 }
 }
B) Checksum
import java.util.Scanner;
public class Checksum {
 public static void main(String args[]) {
 Scanner sc = new Scanner(System.in);
 System.out.print("Enter first binary string: ");
 String a = sc.next();
 System.out.print("Enter second binary string: ");
 String b = sc.next();

 if (a.length() != b.length()) {
 System.out.println("Wrong input strings");
 return;
 }

 int length = a.length();
 char[] sum = new char[length];
 char carry = '0';

 for (int i = length - 1; i >= 0; i--) {
 int bitSum = (a.charAt(i) - '0') + (b.charAt(i) - '0') + (carry - '0');
 sum[i] = (char) ((bitSum % 2) + '0');
 carry = (bitSum > 1) ? '1' : '0';
 }

 System.out.println("Sum=" + carry + String.valueOf(sum));

 for (int i = 0; i < length; i++) {
 sum[i] = (sum[i] == '0') ? '1' : '0';
 }
 carry = (carry == '1') ? '0' : '1';

 System.out.println("Checksum=" + carry + String.valueOf(sum));
 }
}
